{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/Downloads/front/src/pages/register/register.tsx\";\nimport { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport AuthService from \"../../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string().test(\"len\", \"The username must be between 3 and 20 characters.\", val => val && val.toString().length >= 3 && val.toString().length <= 20).required(\"This field is required!\"),\n      email: Yup.string().email(\"This is not a valid email.\").required(\"This field is required!\"),\n      password: Yup.string().test(\"len\", \"The password must be between 6 and 40 characters.\", val => val && val.toString().length >= 6 && val.toString().length <= 40).required(\"This field is required!\")\n    });\n  }\n\n  handleRegister(formValue) {\n    const {\n      username,\n      email,\n      password\n    } = formValue;\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    AuthService.register(username, email, password).then(response => {\n      this.setState({\n        message: response.data.message,\n        successful: true\n      });\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      this.setState({\n        successful: false,\n        message: resMessage\n      });\n    });\n  }\n\n  render() {\n    const {\n      successful,\n      message\n    } = this.state;\n    const initialValues = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n          alt: \"profile-img\",\n          className: \"profile-img-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: this.validationSchema,\n          onSubmit: this.handleRegister,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [!successful && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \" Username \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"username\",\n                  type: \"text\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  component: \"div\",\n                  className: \"alert alert-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \" Email \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"email\",\n                  type: \"email\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"email\",\n                  component: \"div\",\n                  className: \"alert alert-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  children: \" Password \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"password\",\n                  type: \"password\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"alert alert-danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-block\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n                role: \"alert\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","Formik","Field","Form","ErrorMessage","Yup","AuthService","Register","constructor","props","handleRegister","bind","state","username","email","password","successful","message","validationSchema","object","shape","string","test","val","toString","length","required","formValue","setState","register","then","response","data","error","resMessage","render","initialValues"],"sources":["/home/marcelo/Downloads/front/src/pages/register/register.tsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthService from \"../../services/auth.service\";\n\ntype Props = {};\n\ntype State = {\n  username: string,\n  email: string,\n  password: string,\n  successful: boolean,\n  message: string\n};\n\nexport default class Register extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string()\n        .test(\n          \"len\",\n          \"The username must be between 3 and 20 characters.\",\n          (val: any) =>\n            val &&\n            val.toString().length >= 3 &&\n            val.toString().length <= 20\n        )\n        .required(\"This field is required!\"),\n      email: Yup.string()\n        .email(\"This is not a valid email.\")\n        .required(\"This field is required!\"),\n      password: Yup.string()\n        .test(\n          \"len\",\n          \"The password must be between 6 and 40 characters.\",\n          (val: any) =>\n            val &&\n            val.toString().length >= 6 &&\n            val.toString().length <= 40\n        )\n        .required(\"This field is required!\"),\n    });\n  }\n\n  handleRegister(formValue: { username: string; email: string; password: string }) {\n    const { username, email, password } = formValue;\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    AuthService.register(\n      username,\n      email,\n      password\n    ).then(\n      response => {\n        this.setState({\n          message: response.data.message,\n          successful: true\n        });\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        this.setState({\n          successful: false,\n          message: resMessage\n        });\n      }\n    );\n  }\n\n  render() {\n    const { successful, message } = this.state;\n\n    const initialValues = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    };\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Formik\n            initialValues={initialValues}\n            validationSchema={this.validationSchema}\n            onSubmit={this.handleRegister}\n          >\n            <Form>\n              {!successful && (\n                <div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"username\"> Username </label>\n                    <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                    <ErrorMessage\n                      name=\"username\"\n                      component=\"div\"\n                      className=\"alert alert-danger\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\"> Email </label>\n                    <Field name=\"email\" type=\"email\" className=\"form-control\" />\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"alert alert-danger\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\"> Password </label>\n                    <Field\n                      name=\"password\"\n                      type=\"password\"\n                      className=\"form-control\"\n                    />\n                    <ErrorMessage\n                      name=\"password\"\n                      component=\"div\"\n                      className=\"alert alert-danger\"\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                  </div>\n                </div>\n              )}\n\n              {message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      successful ? \"alert alert-success\" : \"alert alert-danger\"\n                    }\n                    role=\"alert\"\n                  >\n                    {message}\n                  </div>\n                </div>\n              )}\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}