{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8000/';\n\nclass UserService {\n  async getPublicContent() {\n    return await fetch(API_URL + 'busca').then(response => {\n      if (!response.ok) {\n        return 'Network response was not ok';\n      }\n\n      console.log(response);\n      return response.json();\n    });\n  }\n\n  async getPublicContent2() {\n    return await fetch(API_URL + 'frase').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(data => {\n      return data;\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"names":["axios","authHeader","API_URL","UserService","getPublicContent","fetch","then","response","ok","console","log","json","getPublicContent2","Error","data","catch","error","getUserBoard","get","headers","getModeratorBoard","getAdminBoard"],"sources":["/home/marcelo/Downloads/front/src/services/user.service.ts"],"sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8000/';\n\nclass UserService {\n  async getPublicContent() {\n    return await fetch(API_URL + 'busca')\n      .then(response => {\n        if (!response.ok) {\n          return 'Network response was not ok';\n        }\n        console.log(response)\n        return response.json();\n      })\n  }\n\n  async getPublicContent2() {\n    return await fetch(API_URL + 'frase')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }\n  \n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAEA,MAAMC,WAAN,CAAkB;EACM,MAAhBC,gBAAgB,GAAG;IACvB,OAAO,MAAMC,KAAK,CAACH,OAAO,GAAG,OAAX,CAAL,CACVI,IADU,CACLC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QAChB,OAAO,6BAAP;MACD;;MACDC,OAAO,CAACC,GAAR,CAAYH,QAAZ;MACA,OAAOA,QAAQ,CAACI,IAAT,EAAP;IACD,CAPU,CAAb;EAQD;;EAEsB,MAAjBC,iBAAiB,GAAG;IACxB,OAAO,MAAMP,KAAK,CAACH,OAAO,GAAG,OAAX,CAAL,CACVI,IADU,CACLC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QAChB,MAAM,IAAIK,KAAJ,CAAU,6BAAV,CAAN;MACD;;MACD,OAAON,QAAQ,CAACI,IAAT,EAAP;IACD,CANU,EAOVL,IAPU,CAOLQ,IAAI,IAAI;MACZ,OAAOA,IAAP;IACD,CATU,EAUVC,KAVU,CAUJC,KAAK,IAAI;MACdP,OAAO,CAACO,KAAR,CAAc,QAAd,EAAwBA,KAAxB;IACD,CAZU,CAAb;EAaD;;EAEDC,YAAY,GAAG;IACb,OAAOjB,KAAK,CAACkB,GAAN,CAAUhB,OAAO,GAAG,MAApB,EAA4B;MAAEiB,OAAO,EAAElB,UAAU;IAArB,CAA5B,CAAP;EACD;;EAEDmB,iBAAiB,GAAG;IAClB,OAAOpB,KAAK,CAACkB,GAAN,CAAUhB,OAAO,GAAG,KAApB,EAA2B;MAAEiB,OAAO,EAAElB,UAAU;IAArB,CAA3B,CAAP;EACD;;EAEDoB,aAAa,GAAG;IACd,OAAOrB,KAAK,CAACkB,GAAN,CAAUhB,OAAO,GAAG,OAApB,EAA6B;MAAEiB,OAAO,EAAElB,UAAU;IAArB,CAA7B,CAAP;EACD;;AAtCe;;AAyClB,eAAe,IAAIE,WAAJ,EAAf"},"metadata":{},"sourceType":"module"}