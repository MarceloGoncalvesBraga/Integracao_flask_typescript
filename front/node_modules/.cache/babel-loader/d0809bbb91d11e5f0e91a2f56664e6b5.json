{"ast":null,"code":"const {\n  REACT_APP_API_VERSION\n} = process.env;\nconst BASE_URL = REACT_APP_API_VERSION || 'http://localhost:3008';\n\nclass UserService {\n  post(url, params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'POST',\n          headers: headers,\n          //mode: 'no-cors',\n          body: JSON.stringify(params) //body: JSON.stringify({questions:'ola'}),\n\n        });\n        const resJson = await res.json();\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n  }\n\n  get(url) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'GET',\n          headers\n        });\n        if (res.status === 204) resolve([]);\n        const resJson = await res.json();\n\n        if (resJson.error || res.status.toString()[0] === '4' || res.status.toString()[0] === '5') {\n          var _resJson$error;\n\n          const error = new Error((_resJson$error = resJson.error) === null || _resJson$error === void 0 ? void 0 : _resJson$error.display_message);\n          reject(error);\n        }\n\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  delete(url) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'DELETE',\n          headers\n        });\n        const resJson = await res.json();\n\n        if (resJson.error || res.status.toString()[0] === '4' || res.status.toString()[0] === '5') {\n          const error = new Error(resJson.error.display_message);\n          reject(error);\n        }\n\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  put(url, params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify(params)\n        });\n        const resJson = await res.json();\n\n        if (resJson.error || res.status.toString()[0] === '4' || res.status.toString()[0] === '5') {\n          var _resJson$error2;\n\n          throw new Error((_resJson$error2 = resJson.error) === null || _resJson$error2 === void 0 ? void 0 : _resJson$error2.display_message);\n        }\n\n        resolve(resJson);\n      } catch (error) {\n        console.log('erro original', error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  headers(h) {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      ...h\n    };\n    return headers;\n  }\n\n}\n\nconst Service = new UserService();\nexport default Service;","map":{"version":3,"names":["REACT_APP_API_VERSION","process","env","BASE_URL","UserService","post","url","params","Promise","resolve","reject","headers","res","fetch","method","body","JSON","stringify","resJson","json","error","console","log","get","status","toString","Error","display_message","errorJson","delete","put","h","Service"],"sources":["/home/marcelo/bot/front/src/services/service.ts"],"sourcesContent":["\nconst { REACT_APP_API_VERSION } = process.env;\n\nconst BASE_URL = REACT_APP_API_VERSION || 'http://localhost:3008';\n\nclass UserService {\n\n  post<a>(url: string, params: Object): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'POST',\n          headers: headers,\n          //mode: 'no-cors',\n          body: JSON.stringify(params),\n          //body: JSON.stringify({questions:'ola'}),\n\n        });\n        const resJson = await res.json();\n        resolve(resJson);\n      } catch (error: any) {\n        console.log(error);\n        \n        \n      }\n    });\n  }\n  get<a>(url: string): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'GET',\n          headers,\n        });\n        if (res.status === 204) resolve([] as any);\n        const resJson = await res.json();\n        if (\n          resJson.error\n          || res.status.toString()[0] === '4'\n          || res.status.toString()[0] === '5'\n        ) {\n          const error = new Error(resJson.error?.display_message);\n          reject(error);\n        }\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  delete<a>(url: string): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'DELETE',\n          headers,\n        });\n        const resJson = await res.json();\n        if (\n          resJson.error\n          || res.status.toString()[0] === '4'\n          || res.status.toString()[0] === '5'\n        ) {\n          const error = new Error(resJson.error.display_message);\n          reject(error);\n        }\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  put<a>(url: string, params: Object): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify(params),\n        });\n        const resJson = await res.json();\n        if (\n          resJson.error\n          || res.status.toString()[0] === '4'\n          || res.status.toString()[0] === '5'\n        ) {\n          throw new Error(resJson.error?.display_message);\n        }\n        resolve(resJson);\n      } catch (error) {\n        console.log('erro original', error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n  headers(h: Object): any {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      ...h,\n    };\n    return headers;\n  }\n}\nconst Service = new UserService();\n\nexport default Service;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}