{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/Downloads/front_viv/src/components/Input/index.tsx\";\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-unused-vars */\nimport React from 'react'; //import formatCP from '../../utils/formatCPF';\n//import phoneMaskHelper from '../../utils/phoneMaskHelper';\n\nimport * as S from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    onChange,\n    type,\n    placeholder,\n    onKeyPress,\n    name,\n    required\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(S.Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(S.Input, {\n        id: name,\n        type: type,\n        placeholder: placeholder,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","S","Input","onChange","type","placeholder","onKeyPress","name","required"],"sources":["/home/marcelo/Downloads/front_viv/src/components/Input/index.tsx"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable no-unused-vars */\nimport React, { InputHTMLAttributes, ChangeEvent,  } from 'react';\n//import formatCP from '../../utils/formatCPF';\n//import phoneMaskHelper from '../../utils/phoneMaskHelper';\n\nimport * as S from './styles';\n\ntype InputProps = InputHTMLAttributes<HTMLInputElement> & {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string;\n  name: string;\n  type: string;\n  onKeyPress?: (event: any) => void;\n  required?: boolean;\n}\n\nconst Input: React.FC<InputProps> = ({\nonChange, type, placeholder, onKeyPress, name, required,\n}: InputProps) => {\n\nreturn (\n  <S.Container >\n    <S.Wrapper>\n      <S.Input\n        id={name}\n        type={type}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </S.Wrapper>\n  </S.Container>\n);\n};\nexport default Input;\n"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,MAA0D,OAA1D,C,CACA;AACA;;AAEA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;;AAWA,MAAMC,KAA2B,GAAG,QAElB;EAAA,IAFmB;IACrCC,QADqC;IAC3BC,IAD2B;IACrBC,WADqB;IACRC,UADQ;IACIC,IADJ;IACUC;EADV,CAEnB;EAElB,oBACE,QAAC,CAAD,CAAG,SAAH;IAAA,uBACE,QAAC,CAAD,CAAG,OAAH;MAAA,uBACE,QAAC,CAAD,CAAG,KAAH;QACE,EAAE,EAAED,IADN;QAEE,IAAI,EAAEH,IAFR;QAGE,WAAW,EAAEC,WAHf;QAIE,QAAQ,EAAEF;MAJZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYC,CAhBD;;KAAMD,K;AAiBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}