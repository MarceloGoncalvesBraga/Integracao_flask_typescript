{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:3000';\n\nclass UserService {\n  get(url) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        //const headers = this.headers({});\n        const res = await fetch(`${API_URL}${url}`, {\n          method: 'GET'\n        }); // const res = await fetch(`${API_URL}${url}`, {\n        //   method: 'GET',\n        //   headers,\n        // });\n\n        const resJson = await res.json();\n        resolve(resJson);\n      } catch (error) {\n        console.log(error); // const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        // reject(errorJson);\n      }\n    });\n  }\n\n  async getPublicContent2() {\n    return await fetch(API_URL + 'frase').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(data => {\n      return data;\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', {\n      headers: authHeader()\n    });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', {\n      headers: authHeader()\n    });\n  }\n\n  headers(h) {\n    //const jwt = window.localStorage.getItem('suite@token');\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      //  'Cors': 'no-cors',\n      //Authorization: `Bearer ${jwt}`,\n      ...h\n    };\n    return headers;\n  }\n\n}\n\nconst Service = new UserService();\nexport default Service;","map":{"version":3,"names":["axios","authHeader","API_URL","UserService","get","url","Promise","resolve","reject","res","fetch","method","resJson","json","error","console","log","getPublicContent2","then","response","ok","Error","data","catch","getUserBoard","headers","getModeratorBoard","getAdminBoard","h","Service"],"sources":["/home/marcelo/Downloads/front/src/services/user.service.ts"],"sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:3000';\n\nclass UserService {\n  get<a>(url: string): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        //const headers = this.headers({});\n        const res = await fetch(`${API_URL}${url}`, {\n          method: 'GET',\n          \n        });\n        // const res = await fetch(`${API_URL}${url}`, {\n        //   method: 'GET',\n        //   headers,\n        // });\n        const resJson = await res.json();\n        resolve(resJson);\n        \n      } catch (error) {\n        console.log(error);\n        // const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        // reject(errorJson);\n      }\n    });\n  }\n\n  async getPublicContent2() {\n    return await fetch(API_URL + 'frase')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }\n  \n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n  headers(h: Object): any {\n    //const jwt = window.localStorage.getItem('suite@token');\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      //  'Cors': 'no-cors',\n      //Authorization: `Bearer ${jwt}`,\n      ...h,\n    };\n    return headers;\n  }\n\n}\nconst Service = new UserService();\n\nexport default Service;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,MAAMC,WAAN,CAAkB;EAChBC,GAAG,CAAIC,GAAJ,EAA6B;IAC9B,OAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;MAC5C,IAAI;QACF;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAER,OAAQ,GAAEG,GAAI,EAAlB,EAAqB;UAC1CM,MAAM,EAAE;QADkC,CAArB,CAAvB,CAFE,CAMF;QACA;QACA;QACA;;QACA,MAAMC,OAAO,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAtB;QACAN,OAAO,CAACK,OAAD,CAAP;MAED,CAbD,CAaE,OAAOE,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADc,CAEd;QACA;MACD;IACF,CAnBM,CAAP;EAoBD;;EAEsB,MAAjBG,iBAAiB,GAAG;IACxB,OAAO,MAAMP,KAAK,CAACR,OAAO,GAAG,OAAX,CAAL,CACVgB,IADU,CACLC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;MACD;;MACD,OAAOF,QAAQ,CAACN,IAAT,EAAP;IACD,CANU,EAOVK,IAPU,CAOLI,IAAI,IAAI;MACZ,OAAOA,IAAP;IACD,CATU,EAUVC,KAVU,CAUJT,KAAK,IAAI;MACdC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;IACD,CAZU,CAAb;EAaD;;EAEDU,YAAY,GAAG;IACb,OAAOxB,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,MAApB,EAA4B;MAAEuB,OAAO,EAAExB,UAAU;IAArB,CAA5B,CAAP;EACD;;EAEDyB,iBAAiB,GAAG;IAClB,OAAO1B,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,KAApB,EAA2B;MAAEuB,OAAO,EAAExB,UAAU;IAArB,CAA3B,CAAP;EACD;;EAED0B,aAAa,GAAG;IACd,OAAO3B,KAAK,CAACI,GAAN,CAAUF,OAAO,GAAG,OAApB,EAA6B;MAAEuB,OAAO,EAAExB,UAAU;IAArB,CAA7B,CAAP;EACD;;EACDwB,OAAO,CAACG,CAAD,EAAiB;IACtB;IACA,MAAMH,OAAO,GAAG;MACd,gBAAgB,kBADF;MAEd,UAAU,kBAFI;MAGd;MACA;MACA,GAAGG;IALW,CAAhB;IAOA,OAAOH,OAAP;EACD;;AA7De;;AAgElB,MAAMI,OAAO,GAAG,IAAI1B,WAAJ,EAAhB;AAEA,eAAe0B,OAAf"},"metadata":{},"sourceType":"module"}