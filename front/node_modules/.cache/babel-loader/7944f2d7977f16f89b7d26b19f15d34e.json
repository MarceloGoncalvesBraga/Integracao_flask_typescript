{"ast":null,"code":"var _jsxFileName = \"/home/marcelo/bot/front/src/components/Button/index.tsx\";\nimport React from 'react';\nimport Spin from '../Spin';\nimport * as S from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onFinish,\n    children,\n    className,\n    width,\n    height,\n    variant,\n    style,\n    disabled,\n    loading,\n    dataTst\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(S.Button, {\n    disabled: disabled,\n    className: className,\n    onClick: onFinish,\n    width: width,\n    height: height,\n    variant: variant || 'default',\n    style: style,\n    \"data-tst\": dataTst,\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Spin, {\n        size: 15,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Spin","S","Button","onFinish","children","className","width","height","variant","style","disabled","loading","dataTst","marginRight"],"sources":["/home/marcelo/bot/front/src/components/Button/index.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, CSSProperties } from 'react';\nimport Spin from '../Spin';\nimport * as S from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\n  onFinish: (value: any) => void;\n\n  children?: React.ReactNode;\n  className?: string;\n  width?: number | undefined;\n  height?: number | undefined;\n  variant?: 'default' | 'primary' | 'outline' | 'outline-icon' | 'transparent' | 'secondary';\n  style?: CSSProperties;\n  disabled?: boolean;\n  loading?: boolean;\n  dataTst?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  onFinish, children, className, width, height, variant, style, disabled, loading, dataTst,\n}: ButtonProps) => (\n  <S.Button disabled={disabled} className={className} onClick={onFinish} width={width} height={height} variant={variant || 'default'} style={style} data-tst={dataTst}>\n    {!loading ? children : (\n      <>\n        <Spin size={15} style={{ marginRight: '10px' }} />\n        {children}\n      </>\n    )}\n  </S.Button>\n);\n\nexport default Button;\n"],"mappings":";AAAA,OAAOA,KAAP,MAA2D,OAA3D;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;;;AAgBA,MAAMC,MAA6B,GAAG;EAAA,IAAC;IACrCC,QADqC;IAC3BC,QAD2B;IACjBC,SADiB;IACNC,KADM;IACCC,MADD;IACSC,OADT;IACkBC,KADlB;IACyBC,QADzB;IACmCC,OADnC;IAC4CC;EAD5C,CAAD;EAAA,oBAGpC,QAAC,CAAD,CAAG,MAAH;IAAU,QAAQ,EAAEF,QAApB;IAA8B,SAAS,EAAEL,SAAzC;IAAoD,OAAO,EAAEF,QAA7D;IAAuE,KAAK,EAAEG,KAA9E;IAAqF,MAAM,EAAEC,MAA7F;IAAqG,OAAO,EAAEC,OAAO,IAAI,SAAzH;IAAoI,KAAK,EAAEC,KAA3I;IAAkJ,YAAUG,OAA5J;IAAA,UACG,CAACD,OAAD,GAAWP,QAAX,gBACC;MAAA,wBACE,QAAC,IAAD;QAAM,IAAI,EAAE,EAAZ;QAAgB,KAAK,EAAE;UAAES,WAAW,EAAE;QAAf;MAAvB;QAAA;QAAA;QAAA;MAAA,QADF,EAEGT,QAFH;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QAHoC;AAAA,CAAtC;;KAAMF,M;AAaN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}