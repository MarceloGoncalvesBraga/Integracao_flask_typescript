{"ast":null,"code":"const {\n  REACT_APP_API_VERSION\n} = process.env;\nconst BASE_URL = REACT_APP_API_VERSION || 'http://localhost:3008';\n\nclass UserService {\n  getPublicContent(url) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'GET',\n          headers\n        }); //const res = await fetch(`${API_URL}${url}`);\n\n        const resJson = await res.json();\n        resolve(resJson);\n      } catch (error) {\n        console.log(error); // const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        // reject(errorJson);\n      }\n    });\n  }\n\n  post(url, params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'POST',\n          headers,\n          //mode: 'no-cors',\n          body: JSON.stringify(params)\n        });\n        const resJson = await res.json();\n        resolve(resJson);\n      } catch (error) {\n        console.log(error.message);\n      }\n    });\n  }\n\n  get(url) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'GET',\n          headers\n        });\n        if (res.status === 204) resolve([]);\n        const resJson = await res.json();\n\n        if (resJson.error || res.status.toString()[0] === '4' || res.status.toString()[0] === '5') {\n          var _resJson$error;\n\n          const error = new Error((_resJson$error = resJson.error) === null || _resJson$error === void 0 ? void 0 : _resJson$error.display_message);\n          reject(error);\n        }\n\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  delete(url) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'DELETE',\n          headers\n        });\n        const resJson = await res.json();\n\n        if (resJson.error || res.status.toString()[0] === '4' || res.status.toString()[0] === '5') {\n          const error = new Error(resJson.error.display_message);\n          reject(error);\n        }\n\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  put(url, params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify(params)\n        });\n        const resJson = await res.json();\n\n        if (resJson.error || res.status.toString()[0] === '4' || res.status.toString()[0] === '5') {\n          var _resJson$error2;\n\n          throw new Error((_resJson$error2 = resJson.error) === null || _resJson$error2 === void 0 ? void 0 : _resJson$error2.display_message);\n        }\n\n        resolve(resJson);\n      } catch (error) {\n        console.log('erro original', error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  headers(h) {\n    const jwt = window.localStorage.getItem('suite@token');\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      Authorization: `Bearer ${jwt}`,\n      ...h\n    };\n    return headers;\n  }\n\n  getToken() {\n    return window.localStorage.getItem('suite@token');\n  }\n\n}\n\nconst Service = new UserService();\nexport default Service;","map":{"version":3,"names":["REACT_APP_API_VERSION","process","env","BASE_URL","UserService","getPublicContent","url","Promise","resolve","reject","headers","res","fetch","method","resJson","json","error","console","log","post","params","body","JSON","stringify","message","get","status","toString","Error","display_message","errorJson","delete","put","h","jwt","window","localStorage","getItem","Authorization","getToken","Service"],"sources":["/home/marcelo/Downloads/front_viv/src/services/user.service.ts"],"sourcesContent":["\nconst { REACT_APP_API_VERSION } = process.env;\n\nconst BASE_URL = REACT_APP_API_VERSION || 'http://localhost:3008';\n\nclass UserService {\n\n\n  getPublicContent<a>(url: string): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'GET',\n          headers,\n        });\n        //const res = await fetch(`${API_URL}${url}`);\n        const resJson = await res.json();\n        resolve(resJson);\n        \n      } catch (error) {\n        console.log(error);\n        // const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        // reject(errorJson);\n      }\n    });\n  }\n  post<a>(url: string, params: Object): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'POST',\n          headers,\n          //mode: 'no-cors',\n          body: JSON.stringify(params),\n        });\n        const resJson = await res.json();\n        resolve(resJson);\n      } catch (error: any) {\n        console.log(error.message);\n        \n        \n      }\n    });\n  }\n  get<a>(url: string): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'GET',\n          headers,\n        });\n        if (res.status === 204) resolve([] as any);\n        const resJson = await res.json();\n        if (\n          resJson.error\n          || res.status.toString()[0] === '4'\n          || res.status.toString()[0] === '5'\n        ) {\n          const error = new Error(resJson.error?.display_message);\n          reject(error);\n        }\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  delete<a>(url: string): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'DELETE',\n          headers,\n        });\n        const resJson = await res.json();\n        if (\n          resJson.error\n          || res.status.toString()[0] === '4'\n          || res.status.toString()[0] === '5'\n        ) {\n          const error = new Error(resJson.error.display_message);\n          reject(error);\n        }\n        resolve(resJson);\n      } catch (error) {\n        console.log(error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n\n  put<a>(url: string, params: Object): Promise<a> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const headers = this.headers({});\n        const res = await fetch(`${BASE_URL}${url}`, {\n          method: 'PUT',\n          headers,\n          body: JSON.stringify(params),\n        });\n        const resJson = await res.json();\n        if (\n          resJson.error\n          || res.status.toString()[0] === '4'\n          || res.status.toString()[0] === '5'\n        ) {\n          throw new Error(resJson.error?.display_message);\n        }\n        resolve(resJson);\n      } catch (error) {\n        console.log('erro original', error);\n        const errorJson = new Error('Erro ao enviar informaÃ§Ãµes ðŸ˜ž');\n        reject(errorJson);\n      }\n    });\n  }\n  headers(h: Object): any {\n    const jwt = window.localStorage.getItem('suite@token');\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      Authorization: `Bearer ${jwt}`,\n      ...h,\n    };\n    return headers;\n  }\n \n  getToken(): string | null {\n    return window.localStorage.getItem('suite@token');\n  }\n\n\n}\nconst Service = new UserService();\n\nexport default Service;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}